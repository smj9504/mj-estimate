# Production Environment Settings
# Copy this file to .env.production and fill in your actual values

ENVIRONMENT=production
DEBUG=false

# ========== Database Settings ==========
# NeonDB PostgreSQL Connection
DATABASE_TYPE=postgresql
USE_SQLITE=false
# Format: postgresql://user:password@host/database?sslmode=require
DATABASE_URL=postgresql://user:password@ep-xxx-xxx.us-east-2.aws.neon.tech/neondb?sslmode=require

# Connection Pool Settings
DB_POOL_SIZE=5
DB_MAX_OVERFLOW=10
DB_POOL_TIMEOUT=30
DB_POOL_RECYCLE=3600

# ========== Server Settings ==========
HOST=0.0.0.0
PORT=8000

# ========== Security ==========
# IMPORTANT: Generate a strong secret key for production
# Use: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=CHANGE_THIS_IN_PRODUCTION_USE_RANDOM_STRING

# ========== CORS Origins ==========
# Add your frontend URL(s)
CORS_ORIGINS=["https://your-frontend.vercel.app","https://your-custom-domain.com"]

# ========== Logging ==========
LOG_LEVEL=INFO

# ========== Storage Configuration ==========
# Storage provider: local | gdrive | gcs | s3 | azure
# RECOMMENDED: Use 'gcs' (Google Cloud Storage) for production
STORAGE_PROVIDER=gcs

# Local storage settings (not recommended for production)
STORAGE_BASE_DIR=uploads

# Google Cloud Storage Settings (RECOMMENDED)
# Service Account authentication with automatic optimizations
# Cost: ~$2/month for 100GB (with optimizations: $0.10-0.15/month = 90-95% savings)
# Features:
#  - Image optimization (WebP conversion, resizing, compression)
#  - File deduplication (hash-based, saves 20-30% storage)
#  - Text compression (Gzip for JSON/CSV/logs, 70-90% reduction)
#  - Lifecycle policies (auto-archive old files, 35-50% cost reduction)
GCS_BUCKET_NAME=mj-estimate-storage
GCS_SERVICE_ACCOUNT_FILE=/etc/secrets/service-account-key.json
GCS_MAKE_PUBLIC=false

# Note: For Render deployment, upload service-account-key.json as a secret file
# Path will be: /etc/secrets/service-account-key.json

# ========== Frontend URL ==========
# Your deployed frontend URL (for generating links in notifications)
FRONTEND_URL=https://your-frontend.vercel.app

# ========== External Integrations ==========
# Enable/Disable all integrations
ENABLE_INTEGRATIONS=true

# ========== CompanyCam Integration ==========
COMPANYCAM_API_KEY=your_companycam_api_key_here
COMPANYCAM_WEBHOOK_TOKEN=your_companycam_webhook_token_here

# ========== Slack Integration ==========
# Incoming Webhooks (for sending messages)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL
SLACK_CHANNEL=#water-mitigation

# OAuth Tokens (for advanced features - optional)
SLACK_BOT_TOKEN=xoxb-your-bot-token-here
SLACK_APP_TOKEN=xapp-your-app-token-here

# ========== Google Sheets Integration ==========
# Google API Key (from Google Cloud Console)
GOOGLE_API_KEY=your_google_api_key_here

# Google Sheets Configuration
GOOGLE_SHEETS_WATER_MITIGATION_ID=your_spreadsheet_id_here
GOOGLE_SHEETS_WATER_MITIGATION_SHEET_NAME=Sheet1

# Additional sheets (optional)
# GOOGLE_SHEETS_WORK_ORDER_ID=
# GOOGLE_SHEETS_WORK_ORDER_SHEET_NAME=Sheet1
# GOOGLE_SHEETS_INVOICE_ID=
# GOOGLE_SHEETS_INVOICE_SHEET_NAME=Sheet1

# ========== Notes ==========
# 1. Never commit .env.production to Git
# 2. Set these values in your hosting platform (Render, Railway, etc.)
# 3. Use strong random strings for SECRET_KEY
# 4. Enable HTTPS/SSL for database connections
# 5. Verify CORS_ORIGINS matches your frontend domain
